NAME
    Locale::ID::Province - List of provinces in Indonesia

VERSION
    version 0.04

SYNOPSIS
     use Locale::ID::Province qw(list_id_provinces);
     my $res = list_id_provinces();

DESCRIPTION
    This module provides API access for list of provinces in Indonesia. Data
    is currently retrieved from the gudang-data-interim repository at
    https://github.com/sharyanto/gudang-data-interim/tree/master/data/ind_pr
    ovince/

    This module's functions has Rinci specs.

FUNCTIONS
    None are exported by default, but they are exportable.

SEE ALSO
    list-id-provinces

    Gudang Data Interim project,
    https://github.com/sharyanto/gudang-data-interim/

    This API will also be available on GudangAPI, http://gudangapi.com/

DESCRIPTION
    This module has Rinci metadata.

FUNCTIONS
    None are exported by default, but they are exportable.

  list_id_provinces(%args) -> [status, msg, result, meta]
    Provinces in Indonesia.

    REPLACE ME

    Arguments ('*' denotes required arguments):

    *   bps_code* => *int*

        Only return records where the 'bps_code' field equals specified
        value.

    *   bps_code.is* => *int*

        Only return records where the 'bps_code' field equals specified
        value.

    *   bps_code.max => *int*

        Only return records where the 'bps_code' field is less than or equal
        to specified value.

    *   bps_code.min => *array*

        Only return records where the 'bps_code' field is greater than or
        equal to specified value.

    *   bps_code.xmax => *int*

        Only return records where the 'bps_code' field is less than
        specified value.

    *   bps_code.xmin => *array*

        Only return records where the 'bps_code' field is greater than
        specified value.

    *   detail => *bool* (default: 0)

        Return array of full records instead of just ID fields.

        By default, only the key (ID) field is returned per result entry.

    *   eng_name* => *str*

        Only return records where the 'eng_name' field equals specified
        value.

    *   eng_name.contains => *str*

        Only return records where the 'eng_name' field contains specified
        text.

    *   eng_name.is* => *str*

        Only return records where the 'eng_name' field equals specified
        value.

    *   eng_name.max => *str*

        Only return records where the 'eng_name' field is less than or equal
        to specified value.

    *   eng_name.min => *array*

        Only return records where the 'eng_name' field is greater than or
        equal to specified value.

    *   eng_name.not_contains => *str*

        Only return records where the 'eng_name' field does not contain a
        certain text.

    *   eng_name.xmax => *str*

        Only return records where the 'eng_name' field is less than
        specified value.

    *   eng_name.xmin => *array*

        Only return records where the 'eng_name' field is greater than
        specified value.

    *   fields* => *array*

        Select fields to return.

    *   ind_capital_name* => *str*

        Only return records where the 'ind_capital_name' field equals
        specified value.

    *   ind_capital_name.contains => *str*

        Only return records where the 'ind_capital_name' field contains
        specified text.

    *   ind_capital_name.is* => *str*

        Only return records where the 'ind_capital_name' field equals
        specified value.

    *   ind_capital_name.max => *str*

        Only return records where the 'ind_capital_name' field is less than
        or equal to specified value.

    *   ind_capital_name.min => *array*

        Only return records where the 'ind_capital_name' field is greater
        than or equal to specified value.

    *   ind_capital_name.not_contains => *str*

        Only return records where the 'ind_capital_name' field does not
        contain a certain text.

    *   ind_capital_name.xmax => *str*

        Only return records where the 'ind_capital_name' field is less than
        specified value.

    *   ind_capital_name.xmin => *array*

        Only return records where the 'ind_capital_name' field is greater
        than specified value.

    *   ind_island_name* => *str*

        Only return records where the 'ind_island_name' field equals
        specified value.

    *   ind_island_name.contains => *str*

        Only return records where the 'ind_island_name' field contains
        specified text.

    *   ind_island_name.is* => *str*

        Only return records where the 'ind_island_name' field equals
        specified value.

    *   ind_island_name.max => *str*

        Only return records where the 'ind_island_name' field is less than
        or equal to specified value.

    *   ind_island_name.min => *array*

        Only return records where the 'ind_island_name' field is greater
        than or equal to specified value.

    *   ind_island_name.not_contains => *str*

        Only return records where the 'ind_island_name' field does not
        contain a certain text.

    *   ind_island_name.xmax => *str*

        Only return records where the 'ind_island_name' field is less than
        specified value.

    *   ind_island_name.xmin => *array*

        Only return records where the 'ind_island_name' field is greater
        than specified value.

    *   ind_name* => *str*

        Only return records where the 'ind_name' field equals specified
        value.

    *   ind_name.contains => *str*

        Only return records where the 'ind_name' field contains specified
        text.

    *   ind_name.is* => *str*

        Only return records where the 'ind_name' field equals specified
        value.

    *   ind_name.max => *str*

        Only return records where the 'ind_name' field is less than or equal
        to specified value.

    *   ind_name.min => *array*

        Only return records where the 'ind_name' field is greater than or
        equal to specified value.

    *   ind_name.not_contains => *str*

        Only return records where the 'ind_name' field does not contain a
        certain text.

    *   ind_name.xmax => *str*

        Only return records where the 'ind_name' field is less than
        specified value.

    *   ind_name.xmin => *array*

        Only return records where the 'ind_name' field is greater than
        specified value.

    *   iso3166_2_code* => *str*

        Only return records where the 'iso3166_2_code' field equals
        specified value.

    *   iso3166_2_code.contains => *str*

        Only return records where the 'iso3166_2_code' field contains
        specified text.

    *   iso3166_2_code.is* => *str*

        Only return records where the 'iso3166_2_code' field equals
        specified value.

    *   iso3166_2_code.max => *str*

        Only return records where the 'iso3166_2_code' field is less than or
        equal to specified value.

    *   iso3166_2_code.min => *array*

        Only return records where the 'iso3166_2_code' field is greater than
        or equal to specified value.

    *   iso3166_2_code.not_contains => *str*

        Only return records where the 'iso3166_2_code' field does not
        contain a certain text.

    *   iso3166_2_code.xmax => *str*

        Only return records where the 'iso3166_2_code' field is less than
        specified value.

    *   iso3166_2_code.xmin => *array*

        Only return records where the 'iso3166_2_code' field is greater than
        specified value.

    *   q => *str*

        Search.

    *   random => *bool* (default: 0)

        Return records in random order.

    *   result_limit => *int*

        Only return a certain number of records.

    *   result_start => *int* (default: 1)

        Only return starting from the n'th record.

    *   sort => *str*

        Order records according to certain field(s).

        A list of field names separated by comma. Each field can be prefixed
        with '-' to specify descending order instead of the default
        ascending.

    *   tags* => *str*

        Only return records where the 'tags' field equals specified value.

    *   tags.contains => *str*

        Only return records where the 'tags' field contains specified text.

    *   tags.is* => *str*

        Only return records where the 'tags' field equals specified value.

    *   tags.max => *str*

        Only return records where the 'tags' field is less than or equal to
        specified value.

    *   tags.min => *array*

        Only return records where the 'tags' field is greater than or equal
        to specified value.

    *   tags.not_contains => *str*

        Only return records where the 'tags' field does not contain a
        certain text.

    *   tags.xmax => *str*

        Only return records where the 'tags' field is less than specified
        value.

    *   tags.xmin => *array*

        Only return records where the 'tags' field is greater than specified
        value.

    *   with_field_names => *bool*

        Return field names in each record (as hash/associative array).

        When enabled, function will return each record as hash/associative
        array (field name => value pairs). Otherwise, function will return
        each record as list/array (field value, field value, ...).

    Return value:

    Returns an enveloped result (an array). First element (status) is an
    integer containing HTTP status code (200 means OK, 4xx caller error, 5xx
    function error). Second element (msg) is a string containing error
    message, or 'OK' if status is 200. Third element (result) is optional,
    the actual result. Fourth element (meta) is called result metadata and
    is optional, a hash that contains extra information.

AUTHOR
    Steven Haryanto <stevenharyanto@gmail.com>

COPYRIGHT AND LICENSE
    This software is copyright (c) 2012 by Steven Haryanto.

    This is free software; you can redistribute it and/or modify it under
    the same terms as the Perl 5 programming language system itself.

